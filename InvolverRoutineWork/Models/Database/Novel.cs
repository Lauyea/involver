// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Data.Models.Database
{
    [Table("Novel")]
    [Index("ProfileId", Name = "IX_Novel_ProfileID")]
    public partial class Novel
    {
        public Novel()
        {
            Comments = new HashSet<Comment>();
            Episodes = new HashSet<Episode>();
            Follows = new HashSet<Follow>();
            Involvings = new HashSet<Involving>();
            NovelNovelTags = new HashSet<NovelNovelTag>();
            NovelViewIps = new HashSet<NovelViewIp>();
            NovelViewers = new HashSet<NovelViewer>();
        }

        [Key]
        [Column("NovelID")]
        public int NovelId { get; set; }
        [StringLength(50)]
        public string Title { get; set; } = null!;
        [StringLength(512)]
        public string Introduction { get; set; } = null!;
        public int? Type { get; set; }
        public DateTime CreateTime { get; set; }
        public DateTime UpdateTime { get; set; }
        [Column(TypeName = "money")]
        public decimal TotalCoins { get; set; }
        [Column(TypeName = "money")]
        public decimal MonthlyCoins { get; set; }
        public bool PrimeRead { get; set; }
        public bool End { get; set; }
        public int Views { get; set; }
        public bool Block { get; set; }
        [Column("ProfileID")]
        public string ProfileId { get; set; } = null!;
        [StringLength(1024)]
        public string? ImageUrl { get; set; }
        public int DailyView { get; set; }
        public string? ViewRecordJson { get; set; }

        [ForeignKey("ProfileId")]
        [InverseProperty("Novels")]
        public virtual Profile Profile { get; set; } = null!;
        [InverseProperty("Novel")]
        public virtual ICollection<Comment> Comments { get; set; }
        [InverseProperty("Novel")]
        public virtual ICollection<Episode> Episodes { get; set; }
        [InverseProperty("Novel")]
        public virtual ICollection<Follow> Follows { get; set; }
        [InverseProperty("Novel")]
        public virtual ICollection<Involving> Involvings { get; set; }
        [InverseProperty("NovelsNovel")]
        public virtual ICollection<NovelNovelTag> NovelNovelTags { get; set; }
        [InverseProperty("NovelsNovel")]
        public virtual ICollection<NovelViewIp> NovelViewIps { get; set; }
        [InverseProperty("Novel")]
        public virtual ICollection<NovelViewer> NovelViewers { get; set; }
    }
}