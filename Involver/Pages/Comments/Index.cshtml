@page
@model Involver.Pages.Comments.IndexModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Comments</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name and content:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Content)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].UpdateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Block)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Profile)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Novel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Episode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Announcement)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Feedback)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments[0].Article)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Comments)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Content) @*TODO Anchor to comment tag*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Block)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Profile.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Novel.NovelID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Episode.EpisodeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Announcement.AnnouncementID)
                </td>
                <td>
                    <a asp-page="../Feedbacks/Details"
                       asp-route-id="@item.FeedbackID"
                       asp-fragment="CommentHead">
                        @Html.DisplayFor(modelItem => item.FeedbackID)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Article.ArticleID)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.CommentID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.CommentID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.CommentID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.Comments.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Comments.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-PageIndex="@(Model.Comments.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-PageIndex="@(Model.Comments.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>