@page
@model Involver.Pages.Comments.EditModel

@{
    ViewData["Title"] = "編輯";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>編輯</h1>

<p class="text-danger">@Model.ErrorMessage</p>

<h4>評論</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Comment.CommentID" />
            <input type="hidden" asp-for="Comment.ProfileID" />
            <div class="form-group">
                <label asp-for="Comment.Content" class="control-label"></label>
                <textarea asp-for="Comment.Content" id="editor" class="form-control" rows="7"></textarea>
                <div id="word-count"></div>
                <span asp-validation-for="Comment.Content" class="text-danger"></span>
            </div>
            @if ((await AuthorizationService.AuthorizeAsync(
               User, Model.Comment,
               CommentOperations.Block)).Succeeded)
            {
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Comment.Block" /> @Html.DisplayNameFor(model => model.Comment.Block)
                    </label>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="儲存" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@*<div>
        <a asp-page="./Index">Back to List</a>
    </div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function onSubmit(token) {
         document.getElementById("form").submit();
       }
    </script>
    @{
        ViewData["EditorId"] = "editor";
        ViewData["WordCountDivId"] = "word-count";
        ViewData["MaxLength"] = Parameters.CommentLength;
        await Html.RenderPartialAsync("_ClassicEditorPartial");
    }
}
