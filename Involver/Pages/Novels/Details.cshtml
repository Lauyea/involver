@page
@model Involver.Pages.Novels.DetailsModel

@{
    ViewData["Title"] = Model.Novel.Title;
    ViewData["From"] = Parameters.Novels;
    ViewData["FromId"] = Model.Novel.NovelID;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<partial name="_Toasts" model="Model.Toasts" />
<h1>@Html.DisplayFor(model => model.Novel.Title)</h1>
<h4>
    創作
    @if (Model.UserId != null)
    {
        <span class="d-inline mt-3">
            @if (Model.Followed)
            {
                <button type="button" onclick="FollowNovel(this, @Model.Novel.NovelID)"
                class="btn btn-xs btn-primary disabled">取消追蹤</button>
            }
            else
            {
                <button type="button" onclick="FollowNovel(this, @Model.Novel.NovelID)"
                class="btn btn-xs btn-primary">追蹤創作</button>
            }
        </span>
    }
</h4>

<hr />

<div class="btn-group">
    <a asp-page="./Index" class="btn btn-xs btn-outline-info"><i class="fas fa-chevron-left"></i> 回到清單</a>
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Novel,
    NovelOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Novel.NovelID"
       class="btn btn-xs btn-outline-info">
            <i class="far fa-edit"></i>
            編輯
        </a>
    }
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Novel,
    NovelOperations.Delete)).Succeeded)
    {
        <a asp-page="./Delete" asp-route-id="@Model.Novel.NovelID"
       class="btn btn-xs btn-outline-info">
            <i class="far fa-trash-alt"></i>
            刪除
        </a>
    }
    <a href="#CommentHead" class="btn btn-xs btn-outline-info"><i class="far fa-comment"></i>評論</a>
</div>
<div>
    @if (!Model.Novel.Block)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
       User, Model.Novel, NovelOperations.Block)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Novel.NovelID" />
                <input type="hidden" name="block" value="@true " />
                <button type="submit" class="btn btn-xs btn-danger">Block</button>
            </form>
        }
    }
    else
    {
        @if ((await AuthorizationService.AuthorizeAsync(
       User, Model.Novel, NovelOperations.Block)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Novel.NovelID" />
                <input type="hidden" name="block" value="@false" />
                <button type="submit" class="btn btn-xs btn-success">Unblock</button>
            </form>
        }
    }
</div>
<p></p>
<div class="row">
    <div class="col-md-8">
        <div class="mb-3">
            @if (!string.IsNullOrEmpty(Model.Novel.ImageUrl))
            {
                <img src="@Model.Novel.ImageUrl"
                 asp-append-version="true"
                 alt="讀取失敗"
                 title="@Model.Novel.Title"
                 style="width: 100%; max-height: 400px;border-radius:.5rem;">
                <p></p>
            }
            else
            {
                <img src="https://picsum.photos/600/300?grayscale&random=@Model.Novel.NovelID"
                 alt="讀取失敗"
                 title="主題圖片"
                 style="width: 100%; height: auto;border-radius:.5rem;" />
                <p></p>
            }
            <div class="card mx-auto" style="margin-top:-4rem;width:90%;border-radius: 0.75rem;">
                <dl class="card-body row">
                    <dt class="col-sm-2">
                        作者
                    </dt>
                    <dd class="col-sm-10">
                        <a asp-area="Identity"
                           asp-page="/Profile/Index"
                           asp-route-id="@Model.Novel.ProfileID">
                            @Html.DisplayFor(model => model.Writer.UserName)
                        </a>
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Novel.Introduction)
                    </dt>
                    <dd class="col-sm-10 ck-content text-muted">
                        @Html.AntiXssRaw(Model.Novel.Introduction.Replace("\r\n", "<br />"))
                    </dd>
                    <dt class="col-sm-2">
                        更新
                    </dt>
                    <dd class="col-sm-10 text-muted" title="@Model.Novel.UpdateTime">
                        @TimePeriodHelper.Get(Model.Novel.UpdateTime)
                    </dd>
                    <dt class="col-sm-2">
                        月In幣
                    </dt>
                    <dd class="col-sm-10 text-muted">
                        <div class="row">
                            <div class="col-auto">
                                @Html.DisplayFor(model => model.Novel.MonthlyCoins)
                            </div>
                            <div class="col-auto">
                                <a class="btn btn-xs btn-outline-danger"
                                   asp-page="/Involvings/InvolveNovel"
                                   asp-route-id="@Model.Novel.NovelID">
                                    <i class="fas fa-coins"></i> Involve
                                </a>
                            </div>
                        </div>
                    </dd>
                    <dt class="col-sm-2">
                        總In幣
                    </dt>
                    <dd class="col-sm-10 text-muted">
                        <div class="row">
                            <div class="col-auto">
                                @Html.DisplayFor(model => model.Novel.TotalCoins)
                            </div>
                            <div class="dropdown col-auto">
                                <button type="button" class="btn btn-xs btn-outline-info" data-toggle="dropdown">
                                    Involvers <i class="fas fa-chevron-down"></i>
                                </button>
                                <div class="dropdown-menu">
                                    <a class="btn btn-xs btn-outline-info dropdown-item"
                                       asp-page="/Involvings/Involvers"
                                       asp-route-id="@Model.Novel.NovelID"
                                       title="Recent">最近</a>
                                    <a class="btn btn-xs btn-outline-info dropdown-item"
                                       asp-page="/Involvings/Involvers"
                                       asp-route-id="@Model.Novel.NovelID"
                                       asp-route-TimeSpan="Monthly"
                                       title="Monthly">每月</a>
                                    <a class="btn btn-xs btn-outline-info dropdown-item"
                                       asp-page="/Involvings/Involvers"
                                       asp-route-id="@Model.Novel.NovelID"
                                       asp-route-TimeSpan="TotalTime"
                                       title="TotalTime">總共</a>
                                </div>
                            </div>
                        </div>
                    </dd>
                    <dt class="col-sm-2" title="只有會員可以觀看最新章節">
                        @Html.DisplayNameFor(model => model.Novel.PrimeRead)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Novel.PrimeRead)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Novel.End)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Novel.End)
                    </dd>
                    @if (Model.Novel.Block)
                    {
                        <dt class="col-sm-2" title="列表是否看得見這個創作，如果要解封請提出申請">
                            @Html.DisplayNameFor(model => model.Novel.Block)
                        </dt>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Novel.Block)
                        </dd>
                    }
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Novel.TotalViews)
                    </dt>
                    <dd class="col-sm-10 text-muted">
                        <a href="#" class="view-chart-trigger" data-type="novel" data-id="@Model.Novel.NovelID">@Html.DisplayFor(model => model.Novel.TotalViews)</a>
                    </dd>
                    <dt class="col-sm-2">
                        追蹤數
                    </dt>
                    <dd class="col-sm-10">
                        <a asp-page="/Follows/Followers"
                           asp-route-id="@Model.Novel.NovelID">@Model.Novel.Follows.Count() 位追蹤者</a>
                    </dd>
                    <dt class="col-sm-2">
                        標籤
                    </dt>
                    <dd class="col-sm-10">
                        @foreach (var tag in Model.Novel.NovelTags)
                        {
                            <a asp-page="./Index"
                           asp-route-currentFilter="@tag.Name"
                           class="badge badge-pill badge-info">
                                @tag.Name
                            </a>
                        }
                    </dd>
                </dl>
            </div>
        </div>

        <div>
            <p id="EpisodeHead">
                @if ((await AuthorizationService.AuthorizeAsync(
                User, Model.Novel,
                NovelOperations.Update)).Succeeded)
                {
                    <a asp-page="../Episodes/Create" asp-route-from="@Parameters.Novels" asp-route-fromID="@Model.Novel.NovelID"
                   class="btn btn-xs btn-outline-primary">新章節</a>
                }
            </p>
            <p></p>
            <div id="partialEpisodes"></div>
            <ul id="partialEpisodesPagination" class="pagination"></ul>
        </div>
        <hr />
    </div>
    <div class="col-md-1"></div>
    <div class="col-md-3">
        <partial name="./PartialNovels" for="@Model.RecommendNovels" />
    </div>
</div>

<div class="mt-3">
    <partial name="Comments/PartialComments" for="@Model.Comments" />
</div>



@section Scripts{
    <script>
        $('#partialEpisodesPagination').twbsPagination({
            totalPages: @Model.Episodes.TotalPages,
            visiblePages: @Parameters.EpisodePageSize,
            first: "首",
            prev: "前",
            next: "後",
            last: "末",
            onPageClick: function (event, page) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("Get", "PartialEpisodes")',
                    data: { novelId: @Model.Novel.NovelID, pageIndex: page },
                    success: function (result) {
                        $('#partialEpisodes').html(result);
                    }
                });
            }
        });
    </script>
}
