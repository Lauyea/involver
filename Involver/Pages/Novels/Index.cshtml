@page
@model Involver.Pages.Novels.IndexModel
@using Involver.Helpers
@using Involver.Models.NovelModel

@{
    ViewData["Title"] = "創作";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var novelTypeDetermination = new NovelTypeDetermination();

    // Arrow logic for sorting
    string arrowIncoin = Model.CurrentSort?.StartsWith("Incoin") ?? false ? (Model.CurrentSort.EndsWith("desc") ? "<i class='fas fa-chevron-down'></i>" : "<i class='fas fa-chevron-up'></i>") : "";
    string arrowDate = Model.CurrentSort?.StartsWith("Date") ?? false ? (Model.CurrentSort.EndsWith("desc") ? "<i class='fas fa-chevron-down'></i>" : "<i class='fas fa-chevron-up'></i>") : "";
    string arrowView = Model.CurrentSort?.StartsWith("View") ?? false ? (Model.CurrentSort.EndsWith("desc") ? "<i class='fas fa-chevron-down'></i>" : "<i class='fas fa-chevron-up'></i>") : "";
}

<partial name="_Toasts" model="Model.Toasts" />

<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h1 class="mb-0">創作</h1>
            <div>
                <a asp-page="./Tags" class="btn btn-info" title="標籤雲"><i class="fas fa-tags"></i> 標籤雲</a>
                <a asp-page="Create" class="btn btn-primary">新創作</a>
            </div>
        </div>
        <form asp-page="./Index" method="get">
            <div class="input-group">
                <div class="input-group-prepend">
                    <select asp-for="SearchType" class="custom-select">
                        <option value="">所有類別</option>
                        <option value="Fantasy">奇幻</option>
                        <option value="History">歷史</option>
                        <option value="Love">愛情</option>
                        <option value="Real">真實</option>
                        <option value="Modern">現代</option>
                        <option value="Science">科幻</option>
                        <option value="Horror">驚悚</option>
                        <option value="Detective">推理</option>
                    </select>
                </div>
                <input type="search" name="searchString" value="@Model.CurrentFilter" class="form-control" placeholder="搜尋小說或作者..." />
                <div class="input-group-append">
                    <input type="submit" value="搜尋" class="btn btn-primary" />
                    <a asp-page="./Index" class="btn btn-secondary">完整清單</a>
                </div>
            </div>
        </form>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="btn-group btn-group-sm">
                <a asp-page="./Index" asp-route-sortOrder="@Model.IncoinSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary @(Model.CurrentSort == Model.IncoinSort ? "active" : "")">InCoin @Html.Raw(arrowIncoin)</a>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary @(Model.CurrentSort == Model.DateSort ? "active" : "")">時間 @Html.Raw(arrowDate)</a>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ViewSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary @(Model.CurrentSort == Model.ViewSort ? "active" : "")">觀看數 @Html.Raw(arrowView)</a>
            </div>
            <button id="toggleViewBtn" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-th-list"></i> 切換卡片/列表
            </button>
        </div>

        <!-- List/Table View -->
        <div id="listView" class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table">
                    <tr>
                        <th style="width:12%;text-align:center;">類型/標籤</th>
                        <th style="width:38%;"></th>
                        <th style="width:20%;text-align:center;">In幣</th>
                        <th style="width:15%;text-align:center;">時間</th>
                        <th style="width:15%;text-align:center;">觀看數</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Novels)
                    {
                        <tr>
                            <td class="text-center">
                                <span class="badge badge-secondary">@novelTypeDetermination.GetTypeName(item.Type)</span>
                                <div class="mt-1">
                                    @foreach (var tag in item.NovelTags)
                                    {
                                        <a asp-page="./Index" asp-route-currentFilter="@tag.Name" class="badge badge-pill badge-info">@tag.Name</a>
                                    }
                                </div>
                            </td>
                            <td style="vertical-align:middle;">
                                <div class="d-flex align-items-center">
                                    <a asp-page="./Details" asp-route-id="@item.NovelID">
                                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                                        {
                                            <img src="@item.ImageUrl" asp-append-version="true" alt="讀取失敗" title="@item.Title" style="height:80px;object-fit:cover;border-radius:6px;margin-right:10px;">
                                        }
                                        else
                                        {
                                            <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID" alt="讀取失敗" title="主題圖片" style="height:80px;object-fit:cover;border-radius:6px;margin-right:10px;" />
                                        }
                                    </a>
                                    <div>
                                        <a asp-page="./Details" asp-route-id="@item.NovelID" class="fw-bold">@Html.DisplayFor(modelItem => item.Title)</a>
                                        @if (item.Block == true)
                                        {
                                            <span class="text-danger ms-1">Block</span>
                                        }
                                        <div>
                                            <small><a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">@Html.DisplayFor(modelItem => item.Profile.UserName)</a></small>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <div><small>總計 @Html.DisplayFor(modelItem => item.TotalCoins)</small></div>
                                <div><small>月計 @Html.DisplayFor(modelItem => item.MonthlyCoins)</small></div>
                            </td>
                            <td class="text-center">
                                <small title="@item.UpdateTime">@TimePeriodHelper.Get(item.UpdateTime)</small>
                            </td>
                            <td class="text-center">
                                <a href="#" class="view-chart-trigger" data-type="novel" data-id="@item.NovelID">@Html.DisplayFor(modelItem => item.TotalViews)</a>
                                <div style="width:100px; height:30px; margin:auto;"><canvas id="novel-chart-@item.NovelID"></canvas></div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Card View -->
        <div id="cardView" style="display:none;">
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var item in Model.Novels)
                {
                    <div class="col mb-4">
                        <div class="card h-100 hover-effect">
                            <a asp-page="./Details" asp-route-id="@item.NovelID">
                                @if (!string.IsNullOrEmpty(item.ImageUrl))
                                {
                                    <img src="@item.ImageUrl" asp-append-version="true" alt="讀取失敗" title="@item.Title" class="card-img-top" style="max-height:180px;object-fit:cover;">
                                }
                                else
                                {
                                    <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID" alt="讀取失敗" title="主題圖片" class="card-img-top" style="max-height:180px;object-fit:cover;" />
                                }
                            </a>
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title mb-1">
                                    <a asp-page="./Details" asp-route-id="@item.NovelID">@Html.DisplayFor(modelItem => item.Title)</a>
                                    @if (item.Block == true)
                                    {
                                        <span class="text-danger ms-1">Block</span>
                                    }
                                </h5>
                                <p class="card-text flex-grow-1"></p>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">
                                        <small>@Html.DisplayFor(modelItem => item.Profile.UserName)</small>
                                    </a>
                                    <div>
                                        <small class="mr-2">
                                            <i class="far fa-eye"></i>
                                            <a href="#" class="view-chart-trigger" data-type="novel" data-id="@item.NovelID">
                                                @Html.DisplayFor(modelItem => item.TotalViews)
                                            </a>
                                        </small>
                                        <small>In幣：@Html.DisplayFor(modelItem => item.TotalCoins)（月 @Html.DisplayFor(modelItem => item.MonthlyCoins)）</small>
                                    </div>
                                </div>

                            </div>
                            <div class="card-footer">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <span class="badge badge-secondary mr-1 mb-1">@novelTypeDetermination.GetTypeName(item.Type)</span>
                                        @foreach (var tag in item.NovelTags)
                                        {
                                            <a asp-page="./Index" asp-route-currentFilter="@tag.Name" class="badge badge-pill badge-info mr-1 mb-1">@tag.Name</a>
                                        }
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <div class="mr-2" style="width:100px; height:30px;" title="最近觀看趨勢">
                                            <canvas id="novel-chart-@item.NovelID"></canvas>
                                        </div>
                                        <small class="text-muted text-nowrap" title="@item.UpdateTime">@TimePeriodHelper.Get(item.UpdateTime)</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    <div class="card-footer">
        @if (Model.Novels.TotalPages > 1)
        {
            var prevDisabled = !Model.Novels.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.Novels.HasNextPage ? "disabled" : "";
            int startPage = 1, endPage = 1;
            PageSizeHelper.Get(Model.Novels.PageIndex, Model.Novels.TotalPages, ref startPage, ref endPage);

            <div class="d-flex justify-content-between align-items-center">
                <nav aria-label="Page navigation">
                    <ul class="pagination mb-0">
                        <li class="page-item @prevDisabled"><a asp-page="./Index" asp-route-PageIndex="1" asp-route-sortOrder="@Model.CurrentSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="page-link"><i class="fas fa-angle-double-left"></i></a></li>
                        <li class="page-item @prevDisabled"><a asp-page="./Index" asp-route-PageIndex="@(Model.Novels.PageIndex - 1)" asp-route-sortOrder="@Model.CurrentSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="page-link"><i class="fas fa-angle-left"></i></a></li>
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.Novels.PageIndex ? "active" : "")"><a asp-page="./Index" asp-route-PageIndex="@i" asp-route-sortOrder="@Model.CurrentSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="page-link">@i</a></li>
                        }
                        <li class="page-item @nextDisabled"><a asp-page="./Index" asp-route-PageIndex="@(Model.Novels.PageIndex + 1)" asp-route-sortOrder="@Model.CurrentSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="page-link"><i class="fas fa-angle-right"></i></a></li>
                        <li class="page-item @nextDisabled"><a asp-page="./Index" asp-route-PageIndex="@Model.Novels.TotalPages" asp-route-sortOrder="@Model.CurrentSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="page-link"><i class="fas fa-angle-double-right"></i></a></li>
                    </ul>
                </nav>
                <form class="form-inline" asp-page="./Index" method="get">
                    <input type="hidden" name="sortOrder" value="@Model.CurrentSort" />
                    <input type="hidden" name="currentType" value="@Model.CurrentType" />
                    <input type="hidden" name="currentFilter" value="@Model.CurrentFilter" />
                    <div class="input-group">
                        <input type="number" name="pageIndex" value="@Model.Novels.PageIndex" class="form-control" style="width: 75px;" />
                        <div class="input-group-append">
                            <input type="submit" value="跳轉" class="btn btn-outline-primary" />
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
            document.addEventListener('DOMContentLoaded', async function () {
                const chartCanvases = document.querySelectorAll('canvas[id^="novel-chart-"]');
                if (chartCanvases.length === 0) {
                    return;
                }

                const novelIdArray = Array.from(chartCanvases).map(canvas => canvas.id.split('-').pop());
                const uniqueNovelIds = [...new Set(novelIdArray)];

                const response = await fetch('/api/Views/GetBatchNovelViews', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(uniqueNovelIds),
                });

                if (!response.ok) {
                    return;
                }

                const batchData = await response.json();

                chartCanvases.forEach(canvas => {
                    const novelId = canvas.id.split('-').pop();
                    const viewsData = batchData[novelId] || [];

                    const labels = [];
                    for (let i = 6; i >= 0; i--) {
                        const d = new Date();
                        d.setDate(d.getDate() - i);
                        labels.push(d.toISOString().split('T')[0]);
                    }

                    const dataPoints = labels.map(label => {
                        const apiDataPoint = viewsData.find(d => d.date.startsWith(label));
                        return apiDataPoint ? apiDataPoint.views : 0;
                    });

                    new Chart(canvas, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: dataPoints,
                                backgroundColor: 'rgb(255, 200, 132)',
                                borderColor: 'rgb(255, 200, 132)',
                                borderWidth: 2,
                                pointRadius: 0, // Hide points
                                tension: 0.2
                            }]
                        },
                        options: {
                            scales: {
                                y: { display: false }, // Hide Y axis
                                x: { display: false }  // Hide X axis
                            },
                            plugins: {
                                legend: { display: false }, // Hide legend
                                tooltip: { enabled: false } // Disable tooltips
                            },
                            maintainAspectRatio: false
                        }
                    });
                });
            });

        // Toggle List/Card View
        $(function () {
            var viewMode = localStorage.getItem('novelViewMode') || 'list';
            function setView(mode) {
                if (mode === 'card') {
                    $('#listView').hide();
                    $('#cardView').show();
                } else {
                    $('#listView').show();
                    $('#cardView').hide();
                }
                localStorage.setItem('novelViewMode', mode);
            }
            setView(viewMode);
            $('#toggleViewBtn').click(function () {
                viewMode = (viewMode === 'list') ? 'card' : 'list';
                setView(viewMode);
            });
        });
    </script>
}