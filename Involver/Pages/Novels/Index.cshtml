@page
@model Involver.Pages.Novels.IndexModel

@{
    ViewData["Title"] = "創作";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    NovelTypeDetermination novelTypeDetermination = new NovelTypeDetermination();
}
<partial name="_Toasts" model="Model.Toasts" />
<span style="font-size:xx-large;">創作</span> <a asp-page="Create" class="btn btn-xs btn-outline-primary m-2 align-top">新創作</a>

@{
    string currentTypeName;
    if (Model.CurrentType == "Fantasy") { currentTypeName = "奇幻"; }
    else if (Model.CurrentType == "History") { currentTypeName = "歷史"; }
    else if (Model.CurrentType == "Love") { currentTypeName = "愛情"; }
    else if (Model.CurrentType == "Real") { currentTypeName = "真實"; }
    else if (Model.CurrentType == "Modern") { currentTypeName = "現代"; }
    else if (Model.CurrentType == "Science") { currentTypeName = "科幻"; }
    else if (Model.CurrentType == "Horror") { currentTypeName = "驚悚"; }
    else if (Model.CurrentType == "Detective") { currentTypeName = "推理"; }
    else { currentTypeName = "類別選擇"; }
}

<form asp-page="./Index" method="get">
    <div class="form-actions no-color row">
        <p class="col-auto">
            <select asp-for="SearchType" class="form-control">
                <option value="">@currentTypeName</option>
                <option value="Fantasy">奇幻</option>
                <option value="History">歷史</option>
                <option value="Love">愛情</option>
                <option value="Real">真實</option>
                <option value="Modern">現代</option>
                <option value="Science">科幻</option>
                <option value="Horror">驚悚</option>
                <option value="Detective">推理</option>
            </select>
        </p>
        <p class="col-6">
            <input type="search" name="searchString" value="@Model.CurrentFilter" class="form-control" />
        </p>
        <p class="col-auto">
            <input type="submit" value="搜尋" class="btn btn-primary" /> |
            <a asp-page="./Index" class="btn btn-xs btn-outline-secondary">完整清單</a>
        </p>
        <p class="col-auto">
            <a asp-page="./Tags" title="標籤雲">
                <i class="fas fa-tags"></i>標籤雲
            </a>
        </p>
    </div>
</form>
<p></p>
<!-- Toggle Button for List/Card View -->
<div class="mb-3">
    <button id="toggleViewBtn" class="btn btn-outline-secondary">
        <i class="fas fa-th-list"></i> 切換卡片/列表
    </button>
</div>
<!-- List/Table View -->
<div id="listView">
<table class="table">
    <thead>
        <tr>
            <th style="width:15%">
                
            </th>
            <th style="width:40%">
                
            </th>
            <th style="width:25%">
                <a asp-page="./Index" asp-route-sortOrder="@Model.IncoinSort"
                   asp-route-currentType="@Model.CurrentType"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    In幣
                </a>
            </th>
            <th class="container" style="width:20%">
                <small class="row">
                    <span class="col-auto">
                        <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        時間
                    </a>
                    </span>
                    <span class="col-auto">&</span>
                    <span class="col-auto">
                        <a asp-page="./Index" asp-route-sortOrder="@Model.ViewSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Novels[0].Views)
                    </a>
                    </span>
                </small>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Novels)
        {
            <tr>
                <td>
                    @novelTypeDetermination.GetTypeName(item.Type)
                    <p>
                        @foreach (var tag in item.NovelTags)
                        {
                            <a asp-page="./Index"
                            asp-route-currentFilter="@tag.Name"
                            class="badge badge-pill badge-info">
                                @tag.Name
                            </a>
                        }
                    </p>
                </td>
                <td>
                    <p>
                        <a asp-page="./Details" asp-route-id="@item.NovelID">@Html.DisplayFor(modelItem => item.Title)</a>
                        @if (item.Block == true)
                        {
                            <span class="text-danger">Block</span>
                        }
                    </p>
                    <a asp-page="./Details" asp-route-id="@item.NovelID">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl"
                         asp-append-version="true"
                         alt="讀取失敗"
                         title="@item.Title"
                         style="max-width: 100%; max-height: 100px">

                        }
                        else
                        {
                            <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID"
                         alt="讀取失敗"
                         title="主題圖片"
                         style="max-width: 100%; max-height: 100px" />
                        }
                    </a>
                    <p>
                        <small>
                            <a asp-area="Identity"
                           asp-page="/Profile/Index"
                           asp-route-id="@item.ProfileID">@Html.DisplayFor(modelItem => item.Profile.UserName)</a>
                        </small>
                    </p>
                </td>
                <td>
                    <p>
                        <small>總計 @Html.DisplayFor(modelItem => item.TotalCoins)</small>
                    </p>
                    <small>月計 @Html.DisplayFor(modelItem => item.MonthlyCoins)</small>
                </td>
                <td>
                    <p>
                        <small>@TimePeriodHelper.Get(item.UpdateTime)</small>
                    </p>
                    <small><a href="#" onclick="ShowViewRecordModal('@item.ViewRecordJson')">@Html.DisplayFor(modelItem => item.Views)</a></small>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
<!-- Card View -->
<div id="cardView" style="display:none;">
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model.Novels)
        {
            <div class="col mb-4">
                <div class="card h-100">
                    <a asp-page="./Details" asp-route-id="@item.NovelID">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" asp-append-version="true" alt="讀取失敗" title="@item.Title" class="card-img-top" style="max-height:180px;object-fit:cover;">
                        }
                        else
                        {
                            <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID" alt="讀取失敗" title="主題圖片" class="card-img-top" style="max-height:180px;object-fit:cover;" />
                        }
                    </a>
                    <div class="card-body">
                        <h5 class="card-title">
                            <a asp-page="./Details" asp-route-id="@item.NovelID">@Html.DisplayFor(modelItem => item.Title)</a>
                            @if (item.Block == true)
                            {
                                <span class="text-danger">Block</span>
                            }
                        </h5>
                        <p class="card-text">
                            <span class="badge badge-secondary">@novelTypeDetermination.GetTypeName(item.Type)</span>
                            @foreach (var tag in item.NovelTags)
                            {
                                <a asp-page="./Index" asp-route-currentFilter="@tag.Name" class="badge badge-pill badge-info">@tag.Name</a>
                            }
                        </p>
                        <p class="card-text">
                            <small><a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">@Html.DisplayFor(modelItem => item.Profile.UserName)</a></small>
                        </p>
                        <p class="card-text">
                            <small>In幣：@Html.DisplayFor(modelItem => item.TotalCoins)（月 @Html.DisplayFor(modelItem => item.MonthlyCoins)）</small>
                        </p>
                        <p class="card-text">
                            <small>更新時間：@TimePeriodHelper.Get(item.UpdateTime)</small>
                        </p>
                        <p class="card-text">
                            <small>觀看數：<a href="#" onclick="ShowViewRecordModal('@item.ViewRecordJson')">@Html.DisplayFor(modelItem => item.Views)</a></small>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@{
    var prevDisabled = !Model.Novels.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Novels.HasNextPage ? "disabled" : "";

    string IsActive(int i)
    {
        string Active = "";
        if (i == Model.Novels.PageIndex)
        {
            Active = "active";
        }
        return Active;
    }

    int StartPage = 1;
    int EndPage = 1;

    PageSizeHelper.Get(Model.Novels.PageIndex, Model.Novels.TotalPages, ref StartPage, ref EndPage);
}

<div class="row">
    <div class="col-auto">
        <nav>
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="1"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        首
                    </a>
                </li>
                <li class="page-item @prevDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.PageIndex-1)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        前
                    </a>
                </li>
                @for (int i = StartPage; i < EndPage + 1; i++)
                {
                    <li class="page-item @IsActive(i)">
                        <a asp-page="./Index"
                       asp-route-PageIndex="@i"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                            @i
                            @if (i == Model.Novels.PageIndex)
                            {
                                <span class="sr-only">(current)</span>
                            }
                        </a>
                    </li>

                }
                <li class="page-item @nextDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.PageIndex+1)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        後
                    </a>
                </li>
                <li class="page-item @nextDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.TotalPages)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        末
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-auto">
        <form class="form-inline"
              asp-page="./Index"
              method="get">
            <div class="form-group">
                <input type="text" name="sortOrder"
                       value="@Model.CurrentSort"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="text" name="currentType"
                       value="@Model.CurrentType"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="text" name="currentFilter"
                       value="@Model.CurrentFilter"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="number" name="pageIndex"
                       value="@Model.Novels.PageIndex"
                       class="form-control"
                       style="max-width:100px;display:inline" />
            </div>
            &nbsp&nbsp
            <div class="form-group">
                <input type="submit" value="跳轉" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts{
    <script>
        function ShowViewRecordModal(json) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("PartialViewRecord", "StatisticalData")',
                data: { json: json },
                success: function (result) {
                    $('#modal').html("");
                    $('#modal').html(result);
                    $('#viewRecordModal').modal('show');
                }
            });
        }
        // Toggle List/Card View
        $(function () {
            var viewMode = localStorage.getItem('novelViewMode') || 'list';
            function setView(mode) {
                if (mode === 'card') {
                    $('#listView').hide();
                    $('#cardView').show();
                } else {
                    $('#listView').show();
                    $('#cardView').hide();
                }
                localStorage.setItem('novelViewMode', mode);
            }
            setView(viewMode);
            $('#toggleViewBtn').click(function () {
                viewMode = (viewMode === 'list') ? 'card' : 'list';
                setView(viewMode);
            });
        });
    </script>
}

@*@{
        string GetTypeName(Involver.Models.NovelModel.Type? type)
        {
            string TypeName = "";
            if (type == Involver.Models.NovelModel.Type.Fantasy)
            {
                TypeName = "奇幻";
            }
            else if (type == Involver.Models.NovelModel.Type.History)
            {
                TypeName = "歷史";
            }
            else if (type == Involver.Models.NovelModel.Type.Love)
            {
                TypeName = "愛情";
            }
            else if (type == Involver.Models.NovelModel.Type.Real)
            {
                TypeName = "真實";
            }
            else if (type == Involver.Models.NovelModel.Type.Modern)
            {
                TypeName = "現代";
            }
            else if (type == Involver.Models.NovelModel.Type.Science)
            {
                TypeName = "科幻";
            }
            else if (type == Involver.Models.NovelModel.Type.Horror)
            {
                TypeName = "驚悚";
            }
            else if (type == Involver.Models.NovelModel.Type.Detective)
            {
                TypeName = "推理";
            }
            else
            {
                TypeName = "";
            }
            return TypeName;
        }
    }*@
