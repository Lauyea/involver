@page
@model Involver.Pages.Novels.IndexModel

@{
    ViewData["Title"] = "創作";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    NovelTypeDetermination novelTypeDetermination = new NovelTypeDetermination();
    // 箭頭顯示判斷
    string arrowIncoin = string.Empty;
    string arrowDate = string.Empty;
    string arrowView = string.Empty;
    if (!String.IsNullOrEmpty(Model.CurrentSort))
    {
        if (Model.CurrentSort.StartsWith("Incoin"))
        {
            arrowIncoin = Model.CurrentSort.EndsWith("desc") ? "<i class='fa-solid fa-chevron-down'></i>" : "<i class='fa-solid fa-chevron-up'></i>";
        }
        if (Model.CurrentSort.StartsWith("Date"))
        {
            arrowDate = Model.CurrentSort.EndsWith("desc") ? "<i class='fa-solid fa-chevron-down'></i>" : "<i class='fa-solid fa-chevron-up'></i>";
        }
        if (Model.CurrentSort.StartsWith("View"))
        {
            arrowView = Model.CurrentSort.EndsWith("desc") ? "<i class='fa-solid fa-chevron-down'></i>" : "<i class='fa-solid fa-chevron-up'></i>";
        }
    }
}
<partial name="_Toasts" model="Model.Toasts" />
<span style="font-size:xx-large;">創作</span> <a asp-page="Create" class="btn btn-xs btn-outline-primary m-2 align-top">新創作</a>

@{
    string currentTypeName;
    if (Model.CurrentType == "Fantasy") { currentTypeName = "奇幻"; }
    else if (Model.CurrentType == "History") { currentTypeName = "歷史"; }
    else if (Model.CurrentType == "Love") { currentTypeName = "愛情"; }
    else if (Model.CurrentType == "Real") { currentTypeName = "真實"; }
    else if (Model.CurrentType == "Modern") { currentTypeName = "現代"; }
    else if (Model.CurrentType == "Science") { currentTypeName = "科幻"; }
    else if (Model.CurrentType == "Horror") { currentTypeName = "驚悚"; }
    else if (Model.CurrentType == "Detective") { currentTypeName = "推理"; }
    else { currentTypeName = "類別選擇"; }
}

<form asp-page="./Index" method="get">
    <div class="form-actions no-color row">
        <p class="col-auto">
            <select asp-for="SearchType" class="form-control">
                <option value="">@currentTypeName</option>
                <option value="Fantasy">奇幻</option>
                <option value="History">歷史</option>
                <option value="Love">愛情</option>
                <option value="Real">真實</option>
                <option value="Modern">現代</option>
                <option value="Science">科幻</option>
                <option value="Horror">驚悚</option>
                <option value="Detective">推理</option>
            </select>
        </p>
        <p class="col-6">
            <input type="search" name="searchString" value="@Model.CurrentFilter" class="form-control" />
        </p>
        <p class="col-auto">
            <input type="submit" value="搜尋" class="btn btn-primary" /> |
            <a asp-page="./Index" class="btn btn-xs btn-outline-secondary">完整清單</a>
        </p>
        <p class="col-auto">
            <a asp-page="./Tags" title="標籤雲">
                <i class="fas fa-tags"></i>標籤雲
            </a>
        </p>
    </div>
</form>
<p></p>
<!-- Toggle Button for List/Card View -->
<div class="mb-3 d-flex align-items-center justify-content-between">
    <div>
        <!-- Sort Buttons for Card View (also used in List View) -->
        <div id="sortBar" class="btn-group mb-2">
            <a asp-page="./Index" asp-route-sortOrder="@Model.IncoinSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary btn-sm @(Model.CurrentSort == Model.IncoinSort ? "active" : "")">In幣 @Html.Raw(arrowIncoin)</a>
            <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary btn-sm @(Model.CurrentSort == Model.DateSort ? "active" : "")">時間 @Html.Raw(arrowDate)</a>
            <a asp-page="./Index" asp-route-sortOrder="@Model.ViewSort" asp-route-currentType="@Model.CurrentType" asp-route-currentFilter="@Model.CurrentFilter" class="btn btn-outline-primary btn-sm @(Model.CurrentSort == Model.ViewSort ? "active" : "")">觀看數 @Html.Raw(arrowView)</a>
        </div>
    </div>
    <button id="toggleViewBtn" class="btn btn-outline-secondary">
        <i class="fas fa-th-list"></i> 切換卡片/列表
    </button>
</div>
<!-- List/Table View -->
<div id="listView">
<div class="table-responsive">
<table class="table table-hover align-middle">
    <thead class="table">
        <tr>
            <th style="width:12%;text-align:center;">類型/標籤</th>
            <th style="width:38%;"></th>
            <th style="width:20%;text-align:center;">In幣</th>
            <th style="width:15%;text-align:center;">時間</th>
            <th style="width:15%;text-align:center;">觀看數</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Novels)
        {
            <tr>
                <td style="vertical-align:middle;text-align:center;">
                    <span class="badge badge-secondary">@novelTypeDetermination.GetTypeName(item.Type)</span>
                    <div class="mt-1">
                        @foreach (var tag in item.NovelTags)
                        {
                            <a asp-page="./Index" asp-route-currentFilter="@tag.Name" class="badge badge-pill badge-info">@tag.Name</a>
                        }
                    </div>
                </td>
                <td style="vertical-align:middle;">
                    <div class="d-flex align-items-center">
                        <a asp-page="./Details" asp-route-id="@item.NovelID">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="@item.ImageUrl" asp-append-version="true" alt="讀取失敗" title="@item.Title" style="height:80px;object-fit:cover;border-radius:6px;margin-right:10px;">
                            }
                            else
                            {
                                <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID" alt="讀取失敗" title="主題圖片" style="height:80px;object-fit:cover;border-radius:6px;margin-right:10px;" />
                            }
                        </a>
                        <div>
                            <a asp-page="./Details" asp-route-id="@item.NovelID" class="fw-bold">@Html.DisplayFor(modelItem => item.Title)</a>
                            @if (item.Block == true)
                            {
                                <span class="text-danger ms-1">Block</span>
                            }
                            <div>
                                <small><a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">@Html.DisplayFor(modelItem => item.Profile.UserName)</a></small>
                            </div>
                        </div>
                    </div>
                </td>
                <td style="vertical-align:middle;text-align:center;">
                    <div><small>總計 @Html.DisplayFor(modelItem => item.TotalCoins)</small></div>
                    <div><small>月計 @Html.DisplayFor(modelItem => item.MonthlyCoins)</small></div>
                </td>
                <td style="vertical-align:middle;text-align:center;">
                    <small>@TimePeriodHelper.Get(item.UpdateTime)</small>
                </td>
                <td style="vertical-align:middle;text-align:center;">
                    <a href="#" class="view-chart-trigger" data-type="novel" data-id="@item.NovelID">@Html.DisplayFor(modelItem => item.TotalViews)</a>
                    <div style="width:100px; height:30px; margin:auto;"><canvas id="novel-chart-@item.NovelID"></canvas></div>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
</div>
<!-- Card View -->
<div id="cardView" style="display:none;">
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model.Novels)
        {
            <div class="col mb-4">
                <div class="card h-100">
                    <a asp-page="./Details" asp-route-id="@item.NovelID">
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" asp-append-version="true" alt="讀取失敗" title="@item.Title" class="card-img-top" style="max-height:180px;object-fit:cover;">
                        }
                        else
                        {
                            <img src="https://picsum.photos/600/300?grayscale&random=@item.NovelID" alt="讀取失敗" title="主題圖片" class="card-img-top" style="max-height:180px;object-fit:cover;" />
                        }
                    </a>
                    <div class="card-body">
                        <h5 class="card-title mb-1">
                            <a asp-page="./Details" asp-route-id="@item.NovelID">@Html.DisplayFor(modelItem => item.Title)</a>
                            @if (item.Block == true)
                            {
                                <span class="text-danger ms-1">Block</span>
                            }
                        </h5>
                        <div class="mb-1">
                            <span class="badge badge-secondary">@novelTypeDetermination.GetTypeName(item.Type)</span>
                            @foreach (var tag in item.NovelTags)
                            {
                                <a asp-page="./Index" asp-route-currentFilter="@tag.Name" class="badge badge-pill badge-info">@tag.Name</a>
                            }
                        </div>
                        <div class="mb-1">
                            <small><a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">@Html.DisplayFor(modelItem => item.Profile.UserName)</a></small>
                        </div>
                        <small>觀看數：<a href="#" class="view-chart-trigger" data-type="novel" data-id="@item.NovelID">@Html.DisplayFor(modelItem => item.TotalViews)</a></small>
                        &nbsp;
                        <small>In幣：@Html.DisplayFor(modelItem => item.TotalCoins)（月 @Html.DisplayFor(modelItem => item.MonthlyCoins)）</small>
                        <div class="m-1" style="width:100px; height:30px;"><canvas id="novel-chart-card-@item.NovelID"></canvas></div>
                    </div>
                    <div class="card-footer">
                        <small class="text-muted">@TimePeriodHelper.Get(item.UpdateTime)</small>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@{
    var prevDisabled = !Model.Novels.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Novels.HasNextPage ? "disabled" : "";

    string IsActive(int i)
    {
        string Active = "";
        if (i == Model.Novels.PageIndex)
        {
            Active = "active";
        }
        return Active;
    }

    int StartPage = 1;
    int EndPage = 1;

    PageSizeHelper.Get(Model.Novels.PageIndex, Model.Novels.TotalPages, ref StartPage, ref EndPage);
}

<div class="row">
    <div class="col-auto">
        <nav>
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="1"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        首
                    </a>
                </li>
                <li class="page-item @prevDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.PageIndex-1)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        前
                    </a>
                </li>
                @for (int i = StartPage; i < EndPage + 1; i++)
                {
                    <li class="page-item @IsActive(i)">
                        <a asp-page="./Index"
                       asp-route-PageIndex="@i"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                            @i
                            @if (i == Model.Novels.PageIndex)
                            {
                                <span class="sr-only">(current)</span>
                            }
                        </a>
                    </li>

                }
                <li class="page-item @nextDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.PageIndex+1)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        後
                    </a>
                </li>
                <li class="page-item @nextDisabled">
                    <a asp-page="./Index"
                       asp-route-PageIndex="@(Model.Novels.TotalPages)"
                       asp-route-sortOrder="@Model.CurrentSort"
                       asp-route-currentType="@Model.CurrentType"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       class="page-link">
                        末
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    <div class="col-auto">
        <form class="form-inline"
              asp-page="./Index"
              method="get">
            <div class="form-group">
                <input type="text" name="sortOrder"
                       value="@Model.CurrentSort"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="text" name="currentType"
                       value="@Model.CurrentType"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="text" name="currentFilter"
                       value="@Model.CurrentFilter"
                       class="form-control"
                       style="width:0px;display:none" />
            </div>
            <div class="form-group">
                <input type="number" name="pageIndex"
                       value="@Model.Novels.PageIndex"
                       class="form-control"
                       style="max-width:100px;display:inline" />
            </div>
            &nbsp&nbsp
            <div class="form-group">
                <input type="submit" value="跳轉" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            const chartCanvases = document.querySelectorAll('canvas[id^="novel-chart-"]');
            if (chartCanvases.length === 0) {
                return;
            }

            const novelIdArray = Array.from(chartCanvases).map(canvas => canvas.id.split('-').pop());
            const uniqueNovelIds = [...new Set(novelIdArray)];

            const response = await fetch('/api/Views/GetBatchNovelViews', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(uniqueNovelIds),
            });

            if (!response.ok) {
                return;
            }

            const batchData = await response.json();

            chartCanvases.forEach(canvas => {
                const novelId = canvas.id.split('-').pop();
                const viewsData = batchData[novelId] || [];

                const labels = [];
                for (let i = 6; i >= 0; i--) {
                    const d = new Date();
                    d.setDate(d.getDate() - i);
                    labels.push(d.toISOString().split('T')[0]);
                }

                const dataPoints = labels.map(label => {
                    const apiDataPoint = viewsData.find(d => d.date.startsWith(label));
                    return apiDataPoint ? apiDataPoint.views : 0;
                });

                new Chart(canvas, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: dataPoints,
                            backgroundColor: 'rgb(255, 200, 132)',
                            borderColor: 'rgb(255, 200, 132)',
                            borderWidth: 2,
                            pointRadius: 0, // Hide points
                            tension: 0.2
                        }]
                    },
                    options: {
                        scales: {
                            y: { display: false }, // Hide Y axis
                            x: { display: false }  // Hide X axis
                        },
                        plugins: {
                            legend: { display: false }, // Hide legend
                            tooltip: { enabled: false } // Disable tooltips
                        },
                        maintainAspectRatio: false
                    }
                });
            });
        });

        // Toggle List/Card View
        $(function () {
            var viewMode = localStorage.getItem('novelViewMode') || 'list';
            function setView(mode) {
                if (mode === 'card') {
                    $('#listView').hide();
                    $('#cardView').show();
                } else {
                    $('#listView').show();
                    $('#cardView').hide();
                }
                localStorage.setItem('novelViewMode', mode);
            }
            setView(viewMode);
            $('#toggleViewBtn').click(function () {
                viewMode = (viewMode === 'list') ? 'card' : 'list';
                setView(viewMode);
            });
        });
    </script>
}