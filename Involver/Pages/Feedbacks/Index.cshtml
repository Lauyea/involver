@page
@model Involver.Pages.Feedbacks.IndexModel
@using Involver.Helpers

@{
    ViewData["Title"] = "回報與意見";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<partial name="_Toasts" model="Model.Toasts" />

<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="mb-0">回報與意見</h1>
            <a asp-page="Create" class="btn btn-primary">提出新意見</a>
        </div>
    </div>
    <div class="card-body">
        <form asp-page="./Index" method="get" class="mb-4">
            <div class="input-group">
                <div class="input-group-prepend">
                    <select asp-for="SearchType" class="custom-select">
                        <option value="Title">標題</option>
                        <option value="OwnerName">作者</option>
                    </select>
                </div>
                <input type="search" name="searchString" value="@Model.CurrentFilter" class="form-control" placeholder="搜尋..." />
                <div class="input-group-append">
                    <input type="submit" value="搜尋" class="btn btn-primary" />
                    <a asp-page="./Index" class="btn btn-secondary">完整清單</a>
                </div>
            </div>
        </form>

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead">
                    <tr>
                        <th>標題</th>
                        <th>作者</th>
                        <th class="text-right">最後更新</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Feedbacks)
                    {
                        <tr>
                            <td>
                                <a asp-page="./Details" asp-route-id="@item.ArticleID">@Html.DisplayFor(modelItem => item.Title)</a>
                                @if (item.Block == true)
                                {
                                    <span class="badge badge-danger ml-2">Blocked</span>
                                }
                                @if (item.Accept == true)
                                {
                                    <span class="badge badge-success ml-2">Accepted</span>
                                }
                            </td>
                            <td>
                                <a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@item.ProfileID">
                                    @Html.DisplayFor(modelItem => item.Profile.UserName)
                                </a>
                            </td>
                            <td class="text-right">
                                <small title="@item.UpdateTime">@TimePeriodHelper.Get(item.UpdateTime)</small>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card-footer">
        @if (Model.Feedbacks.TotalPages > 1)
        {
            var prevDisabled = !Model.Feedbacks.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.Feedbacks.HasNextPage ? "disabled" : "";

            int startPage = 1;
            int endPage = 1;

            PageSizeHelper.Get(Model.Feedbacks.PageIndex, Model.Feedbacks.TotalPages, ref startPage, ref endPage);

            <div class="d-flex justify-content-between align-items-center">
                <nav aria-label="Page navigation">
                    <ul class="pagination mb-0">
                        <li class="page-item @prevDisabled">
                            <a asp-page="./Index" asp-route-PageIndex="1" asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentType="@Model.CurrentType" class="page-link"><i class="fas fa-angle-double-left"></i></a>
                        </li>
                        <li class="page-item @prevDisabled">
                            <a asp-page="./Index" asp-route-PageIndex="@(Model.Feedbacks.PageIndex - 1)" asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentType="@Model.CurrentType" class="page-link"><i class="fas fa-angle-left"></i></a>
                        </li>
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.Feedbacks.PageIndex ? "active" : "")">
                                <a asp-page="./Index" asp-route-PageIndex="@i" asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentType="@Model.CurrentType" class="page-link">@i</a>
                            </li>
                        }
                        <li class="page-item @nextDisabled">
                            <a asp-page="./Index" asp-route-PageIndex="@(Model.Feedbacks.PageIndex + 1)" asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentType="@Model.CurrentType" class="page-link"><i class="fas fa-angle-right"></i></a>
                        </li>
                        <li class="page-item @nextDisabled">
                            <a asp-page="./Index" asp-route-PageIndex="@Model.Feedbacks.TotalPages" asp-route-currentFilter="@Model.CurrentFilter" asp-route-currentType="@Model.CurrentType" class="page-link"><i class="fas fa-angle-double-right"></i></a>
                        </li>
                    </ul>
                </nav>

                <form class="form-inline" asp-page="./Index" method="get">
                    <input type="hidden" name="currentFilter" value="@Model.CurrentFilter" />
                    <input type="hidden" name="currentType" value="@Model.CurrentType" />
                    <div class="input-group">
                        <input type="number" name="pageIndex" value="@Model.Feedbacks.PageIndex" class="form-control" style="width: 75px;" />
                        <div class="input-group-append">
                            <input type="submit" value="跳轉" class="btn btn-outline-primary" />
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>
</div>