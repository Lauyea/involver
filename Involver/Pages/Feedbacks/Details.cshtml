@page "{id}"
@model Involver.Pages.Feedbacks.DetailsModel
@using Involver.Authorization
@using Involver.Common
@using Involver.Helpers
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{ 
    ViewData["Title"] = Model.Feedback.Title;
    ViewData["From"] = Parameters.Feedbacks;
    ViewData["FromId"] = Model.Feedback.ArticleID;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<partial name="_Toasts" model="Model.Toasts" />

<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="mb-0 text-break">@Html.DisplayFor(model => model.Feedback.Title)</h1>
            <div class="d-flex justify-content-end flex-wrap">
                <a asp-page="./Index" class="btn btn-sm btn-outline-secondary m-1" title="回到清單"><i class="fas fa-list"></i></a>
                <a href="#CommentHead" class="btn btn-sm btn-outline-info m-1" title="評論"><i class="fas fa-comment"></i></a>
                @if ((await AuthorizationService.AuthorizeAsync(User, Model.Feedback, ArticleOperations.Update)).Succeeded)
                {
                    <a asp-page="./Edit" asp-route-id="@Model.Feedback.ArticleID" class="btn btn-sm btn-outline-primary m-1" title="編輯"><i class="fas fa-edit"></i></a>
                }
                @if ((await AuthorizationService.AuthorizeAsync(User, Model.Feedback, ArticleOperations.Delete)).Succeeded)
                {
                    <a asp-page="./Delete" asp-route-id="@Model.Feedback.ArticleID" class="btn btn-sm btn-outline-danger m-1" title="刪除"><i class="fas fa-trash-alt"></i></a>
                }
                @if ((await AuthorizationService.AuthorizeAsync(User, Model.Feedback, ArticleOperations.Block)).Succeeded)
                {
                    if (!(Model.Feedback.Accept ?? false))
                    {
                        <form method="post" class="d-inline">
                            <button type="submit" asp-page-handler="accept" asp-route-id="@Model.Feedback.ArticleID" class="btn btn-sm btn-success m-1" title="Accept">
                                <i class="fas fa-check"></i>
                            </button>
                        </form>
                    }
                    <form method="post" class="d-inline">
                        <input type="hidden" name="id" value="@Model.Feedback.ArticleID" />
                        @if (Model.Feedback.Block)
                        {
                            <input type="hidden" name="block" value="false" />
                            <button type="submit" class="btn btn-sm btn-success m-1" title="Unblock"><i class="fas fa-check-circle"></i></button>
                        }
                        else
                        {
                            <input type="hidden" name="block" value="true" />
                            <button type="submit" class="btn btn-sm btn-warning m-1" title="Block"><i class="fas fa-ban"></i></button>
                        }
                    </form>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-between text-muted mb-3">
            <div>
                <small>
                    作者：
                    <a asp-area="Identity" asp-page="/Profile/Index" asp-route-id="@Model.Feedback.ProfileID">
                        @Model.Feedback.Profile.UserName
                    </a>
                </small>
                <small class="ml-3">
                    發布於：<span title="@Model.Feedback.UpdateTime">@TimePeriodHelper.Get(Model.Feedback.UpdateTime)</span>
                </small>
            </div>
            <div>
                @if (Model.Feedback.Block == true)
                {
                    <span class="badge badge-danger">Blocked</span>
                }
                @if (Model.Feedback.Accept == true)
                {
                    <span class="badge badge-success">Accepted</span>
                }
            </div>
        </div>

        <article class="ck-content">
            @Html.AntiXssRaw(Model.Feedback.Content.Replace("\r\n", "<br />"))
        </article>
    </div>
</div>

@await Component.InvokeAsync("CommentSection", new { from = Parameters.Articles, fromID = Model.Feedback.ArticleID })
