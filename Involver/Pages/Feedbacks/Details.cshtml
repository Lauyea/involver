@page
@model Involver.Pages.Feedbacks.DetailsModel

@{
    ViewData["Title"] = "回報與意見";
    ViewData["From"] = Parameters.Feedbacks;
    ViewData["FromId"] = Model.Feedback.FeedbackID;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<partial name="_Toasts" model="Model.Toasts" />
<h1>@Html.DisplayFor(model => model.Feedback.Title)</h1>

<h4>回報與意見</h4>
<hr />

<div class="btn-group row">
    <a asp-page="./Index" class="btn btn-xs btn-outline-info"><i class="fas fa-chevron-left"></i> 回到清單</a>
    @if ((await AuthorizationService.AuthorizeAsync(
 User, Model.Feedback,
 FeedbackOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Feedback.FeedbackID"
           class="btn btn-xs btn-outline-info">
            <i class="far fa-edit"></i>
            編輯
        </a>
    }
    @if ((await AuthorizationService.AuthorizeAsync(
User, Model.Feedback,
FeedbackOperations.Delete)).Succeeded)
    {
        <a asp-page="./Delete" asp-route-id="@Model.Feedback.FeedbackID"
           class="btn btn-xs btn-outline-info">
            <i class="far fa-trash-alt"></i>
            刪除
        </a>
    }
    <a href="#CommentHead" class="btn btn-xs btn-outline-info"><i class="far fa-comment"></i>評論</a>
</div>
<p></p>
<div>
    @if (!Model.Feedback.Accept)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
           User, Model.Feedback, FeedbackOperations.Block)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <button type="submit"
                        asp-page-handler="accept"
                        asp-route-id="@Model.Feedback.FeedbackID"
                        class="btn btn-xs btn-success">
                    Accept
                </button>
            </form>
        }
    }
    @if (!Model.Feedback.Block)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
      User, Model.Feedback, FeedbackOperations.Block)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Feedback.FeedbackID" />
                <input type="hidden" name="block" value="@true " />
                <button type="submit" class="btn btn-xs btn-danger">Block</button>
            </form>
        }
    }

    @if (Model.Feedback.Block)
    {
        @if ((await AuthorizationService.AuthorizeAsync(
      User, Model.Feedback, FeedbackOperations.Block)).Succeeded)
        {
            <form style="display:inline;" method="post">
                <input type="hidden" name="id" value="@Model.Feedback.FeedbackID" />
                <input type="hidden" name="block" value="@false" />
                <button type="submit" class="btn btn-xs btn-success">Unblock</button>
            </form>
        }
    }
</div>

<p></p>

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Feedback.OwnerName)
        </dt>
        <dd class="col-sm-10">
            <a asp-area="Identity"
               asp-page="/Profile/Index"
               asp-route-id="@Model.Feedback.OwnerID">
                @Html.DisplayFor(model => model.Feedback.OwnerName)
            </a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Feedback.UpdateTime)
        </dt>
        <dd class="col-sm-10" title="@Model.Feedback.UpdateTime">
            @TimePeriodHelper.Get(Model.Feedback.UpdateTime)
        </dd>
        @*<dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Feedback.Content)
            </dt>
            <dd class="col-sm-10">
                @Html.AntiXssRaw(Model.Feedback.Content.Replace("\r\n", "<br />"))
            </dd>*@
    </dl>
</div>

<article class="ck-content">
    @Html.AntiXssRaw(Model.Feedback.Content.Replace("\r\n", "<br />"))
</article>

<hr />

<partial name="Comments/PartialComments" for="@Model.Comments" />