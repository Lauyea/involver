@page
@model Involver.Areas.Identity.Pages.Profile.IndexModel
@{
    ViewData["Title"] = "基本資料";
    ViewData["ActivePage"] = ManageNavPages.Index;
    ViewData["ProfileID"] = Model.Profile.ProfileID;
    if (!string.IsNullOrEmpty(Model.Profile.BannerImageUrl))
    {
        ViewData["BannerImageUrl"] = Model.Profile.BannerImageUrl;
    }
}

<partial name="_Toasts" model="Model.Toasts" />
<partial name="_StatusMessage" model="Model.StatusMessage" />
<div>
    <div>
        @if ((await AuthorizationService.AuthorizeAsync(
        User, Model.Profile,
        ProfileOperations.Update)).Succeeded)
        {
            <a asp-page="./ChangeProfile"
           asp-route-id="@Model.Profile.ProfileID"
           class="btn btn-xs btn-outline-primary">
                <i class="far fa-edit"></i>
                編輯
            </a>
        }
        @if (!Model.ProfileOwner && Model.UserID != null)
        {
            @if (Model.Followed)
            {
                <button onclick="FollowAuthor(this, '@Model.Profile.ProfileID')"
                class="btn btn-xs btn-primary disabled">取消追蹤</button>
            }
            else
            {
                <button onclick="FollowAuthor(this, '@Model.Profile.ProfileID')"
                class="btn btn-xs btn-primary">追蹤作者</button>
            }
        }
        &nbsp&nbsp
        @if (!Model.Profile.Banned)
        {
            @if ((await AuthorizationService.AuthorizeAsync(
           User, Model.Profile, ProfileOperations.Ban)).Succeeded)
            {
                <form style="display:inline;" method="post">
                    <input type="hidden" name="id" value="@Model.Profile.ProfileID" />
                    <input type="hidden" name="ban" value="@true " />
                    <button type="submit" class="btn btn-xs btn-danger">Ban</button>
                </form>
            }
        }
        else
        {
            @if ((await AuthorizationService.AuthorizeAsync(
           User, Model.Profile, ProfileOperations.Ban)).Succeeded)
            {
                <form style="display:inline;" method="post">
                    <input type="hidden" name="id" value="@Model.Profile.ProfileID" />
                    <input type="hidden" name="ban" value="@false" />
                    <button type="submit" class="btn btn-xs btn-success">Unban</button>
                </form>
            }
        }
    </div>
    <p></p>
    <div class="row">
        <div class="col-md-5 my-3 text-center">
            @if (!string.IsNullOrEmpty(Model.Profile.ImageUrl))
            {
                <img src="@Model.Profile.ImageUrl"
                 asp-append-version="true"
                 alt="讀取失敗"
                 title="@Model.Profile.UserName"
                 style="max-width: 100%; max-height: 150px; display:inline; border-radius:50%">
            }
            else
            {
                var user = await userManager.FindByIdAsync(Model.Profile.ProfileID);
                <img src="https://www.gravatar.com/avatar/@user.Email.ToMd5()?d=retro"
                 alt="讀取失敗"
                 title="@Model.Profile.UserName"
                 style="max-width: 100%; max-height: 150px; display:inline; border-radius:50%">
            }
            <p class="mt-1">
                <b>@Html.DisplayFor(model => model.Profile.UserName)</b>
            </p>
            @if (Model.Profile.CanChangeUserName && Model.ProfileOwner)
            {
                <a class="btn btn-xs btn-outline-primary my-3"
               asp-area="Identity"
               asp-page="/Account/Manage/Index">
                    可變更用戶名一次
                </a>
            }
            @if (Model.Profile.Introduction != null)
            {
                <div class="mt-3 text-center text-muted">@Html.AntiXssRaw(Model.Profile.Introduction.Replace("\r\n", "<br />"))</div>
            }
        </div>
        <div class="col-md-7">
            <div class="card">
                <ul class="list-group list-group-flush">
                    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Profile, ProfileOperations.Update)).Succeeded)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                <i class="fas fa-dollar-sign text-success mr-2"></i>
                                @Html.DisplayNameFor(model => model.Profile.RealCoins)
                            </span>
                            <div>
                                <a class="btn btn-xs btn-outline-success"
                                   asp-page="/Involvings/StoredValue"
                                   asp-route-id="@Model.Profile.ProfileID">
                                    <i class="fas fa-donate"></i> 儲值In幣
                                </a>
                                <span class="badge badge-light ml-2">@Html.DisplayFor(model => model.Profile.RealCoins)</span>
                            </div>
                        </li>
                    }
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="fas fa-coins text-warning mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.VirtualCoins)
                        </span>
                        <span class="badge badge-light">@Html.DisplayFor(model => model.Profile.VirtualCoins)</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="fas fa-gift text-danger mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.MonthlyCoins)
                        </span>
                        <div>
                            <a class="btn btn-xs btn-outline-danger"
                               asp-page="/Involvings/InvolveCreator"
                               asp-route-id="@Model.Profile.ProfileID">
                                <i class="fas fa-coins"></i> Involve
                            </a>
                            <span class="badge badge-light ml-2">@Html.DisplayFor(model => model.Profile.MonthlyCoins)</span>
                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="far fa-calendar-alt text-info mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.EnrollmentDate)
                        </span>
                        <span class="text-muted">@Html.DisplayFor(model => model.Profile.EnrollmentDate)</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="far fa-clock text-info mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.LastTimeLogin)
                        </span>
                        <span class="text-muted" title="@Model.Profile.LastTimeLogin">@TimePeriodHelper.Get(Model.Profile.LastTimeLogin)</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="fas fa-crown text-primary mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.Prime)
                        </span>
                        <div>
                            <span class="badge @(Model.Profile.Prime ? "badge-success" : "badge-secondary") mr-2">@Html.DisplayFor(model => model.Profile.Prime)</span>
                            @if (!Model.Profile.Prime && (await AuthorizationService.AuthorizeAsync(User, Model.Profile, ProfileOperations.Update)).Succeeded)
                            {
                                <a class="btn btn-xs btn-outline-success"
                                   asp-page="/Involvings/BecomePrime"
                                   asp-route-id="@Model.Profile.ProfileID"
                                   title="成為付費會員，每月可獲得實體與虛擬In幣各150枚">
                                    <i class="fas fa-fist-raised"></i> 成為付費會員
                                </a>
                                <a asp-page="/Descriptions/InCoin"
                                   asp-fragment="prime"
                                   target="_blank"
                                   title="成為付費會員，每月可獲得實體與虛擬In幣各150枚">
                                    <i class="far fa-question-circle"></i>
                                </a>
                            }
                        </div>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="fas fa-feather-alt text-primary mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.Professional)
                        </span>
                        <div>
                            <span class="badge @(Model.Profile.Professional ? "badge-info" : "badge-secondary") mr-2">@Html.DisplayFor(model => model.Profile.Professional)</span>
                            @if (!Model.Profile.Professional && (await AuthorizationService.AuthorizeAsync(User, Model.Profile, ProfileOperations.Update)).Succeeded)
                            {
                                <a class="btn btn-xs btn-outline-info"
                                   asp-page="/Involvings/BecomeProfessional"
                                   asp-route-id="@Model.Profile.ProfileID"
                                   title="成為特約作家，可獲得月收入分潤">
                                    <i class="fas fa-feather-alt"></i> 成為特約作家
                                </a>
                                <a asp-page="/Descriptions/InCoin"
                                   asp-fragment="professional"
                                   target="_blank"
                                   title="成為特約作家，可獲得月收入分潤">
                                    <i class="far fa-question-circle"></i>
                                </a>
                            }
                        </div>
                    </li>
                    @if (Model.Profile.Banned == true)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>
                                <i class="fas fa-gavel text-danger mr-2"></i>
                                @Html.DisplayNameFor(model => model.Profile.Banned)
                            </span>
                            <span class="badge badge-danger">@Html.DisplayFor(model => model.Profile.Banned)</span>
                        </li>
                    }
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="far fa-eye text-muted mr-2"></i>
                            @Html.DisplayNameFor(model => model.Profile.Views)
                        </span>
                        <span class="text-muted">@Html.DisplayFor(model => model.Profile.Views)</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            <i class="fas fa-user-friends text-muted mr-2"></i>
                            追蹤數
                        </span>
                        <a asp-page="./Followers"
                           asp-route-id="@Model.Profile.ProfileID">
                            @Model.Profile.Follows.Count() 個追蹤者
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}