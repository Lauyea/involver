@page
@model Involver.Areas.Identity.Pages.Profile.ChangeProfileModel
@{
    ViewData["Title"] = "基本資料";
    ViewData["ActivePage"] = ManageNavPages.Index;
    ViewData["ProfileID"] = Model.Profile.ProfileID;
    ViewData["ProfileName"] = Model.Profile.UserName;
}

<h4>@ViewData["Title"]</h4>
<partial name="_StatusMessage" model="Model.StatusMessage" />
<div class="row">
    <div class="col-md-4">
        <form enctype="multipart/form-data" method="post">
            @*<div asp-validation-summary="All" class="text-danger"></div>*@
            <div class="form-group">
                <label asp-for="Profile.Introduction" class="control-label"></label>
                <textarea asp-for="Profile.Introduction" id="editor" class="form-control" rows="6" placeholder="在這裡寫些東西..."></textarea>
                <div id="word-count"></div>
                <span asp-validation-for="Profile.Introduction" class="text-danger"></span>
            </div>
            <div class="form-group">
	            <label asp-for="Profile.ImageUrl" class="control-label"></label>
	            <input asp-for="Profile.ImageUrl" class="form-control" />
	            <span asp-validation-for="Profile.ImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
	            <label asp-for="Profile.BannerImageUrl" class="control-label"></label>
	            <input asp-for="Profile.BannerImageUrl" class="form-control" />
	            <span asp-validation-for="Profile.BannerImageUrl" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="btn btn-primary">儲存</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function onSubmit(token) {
         document.getElementById("form").submit();
       }

        ClassicEditor
            .create(document.querySelector('#editor'), {
                toolbar: {
                    items: [
                        'heading',
                        '|',
                        'bold',
                        'italic',
                        'underline',
                        'strikethrough',
                        'fontBackgroundColor',
                        'fontColor',
                        'removeFormat',
                        'findAndReplace',
                        '|',
                        'alignment',
                        'bulletedList',
                        'numberedList',
                        'outdent',
                        'indent',
                        'horizontalLine',
                        '|',
                        'link',
                        'imageInsert',
                        'blockQuote',
                        'insertTable',
                        'mediaEmbed',
                        'sourceEditing',
                        'undo',
                        'redo'
                    ]
                },
                image: {
                    toolbar: [
                        'imageTextAlternative',
                        'imageStyle:inline',
                        'imageStyle:block',
                        'imageStyle:side'
                    ]
                },
                table: {
                    contentToolbar: [
                        'tableColumn',
                        'tableRow',
                        'mergeTableCells'
                    ]
                },
                licenseKey: '',
                mediaEmbed: {
                    previewsInData: true
                },
                wordCount:{
                    displayWords: false,
                    onUpdate: stats => {
                        if (stats.characters > @Parameters.ProfileIntroLength) {
                            alert("輸入字元超過最大限制: @Parameters.ProfileIntroLength");
                        }
                    }
                }
            })
            .then(editor => {
                window.editor = editor;

                const wordCountPlugin = editor.plugins.get( 'WordCount' );
                const wordCountWrapper = document.getElementById( 'word-count' );

                wordCountWrapper.appendChild( wordCountPlugin.wordCountContainer );
            })
            .catch(error => {
                console.error('Oops, something went wrong!');
                console.error(error);
            });
    </script>
}